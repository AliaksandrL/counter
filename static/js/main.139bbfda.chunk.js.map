{"version":3,"sources":["components/Display/Display.module.css","components/Buttons/Buttons.module.css","components/Display/Display.tsx","components/Buttons/Button.tsx","components/Buttons/Buttons.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Display","props","className","s","display","count","maxValue","textRed","text","Button","onClick","onclick","disabled","title","Buttons","btn","changeCount","resetCount","startValue","App","useState","setCount","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,QAAU,yBAAyB,KAAO,wB,oCCA/FD,EAAOC,QAAU,CAAC,IAAM,uB,6ICOXC,EAAU,SAACC,GACpB,OACI,qBAAKC,UAAWC,IAAEC,QAAlB,SACI,sBAAMF,UAAWD,EAAMI,QAAUJ,EAAMK,SAAWH,IAAEI,QAAUJ,IAAEK,KAAhE,SAAuEP,EAAMI,WCD5EI,EAAS,SAACR,GACnB,OACI,wBAAQC,UAAW,SAAUQ,QAAST,EAAMU,QAASC,SAAUX,EAAMW,SAArE,SAAgFX,EAAMY,S,gBCS/EC,EATC,SAACb,GACb,OACI,sBAAKC,UAAWC,IAAEY,IAAlB,UACI,cAAC,EAAD,CAAQF,MAAM,MAAMF,QAASV,EAAMe,YAAaJ,SAAUX,EAAMI,QAAUJ,EAAMK,WAChF,cAAC,EAAD,CAAQO,MAAM,QAAQF,QAASV,EAAMgB,WAAYL,SAAUX,EAAMI,QAAUJ,EAAMiB,iBCsB9EC,MAjCf,WAAgB,IAAD,EAEaC,mBAAS,GAFtB,mBAENf,EAFM,KAECgB,EAFD,KAgBX,OACI,sBAAKnB,UAAU,MAAf,UACI,cAAC,EAAD,CACIG,MAAOA,EACPC,SAjBK,IAmBT,cAAC,EAAD,CACIA,SApBK,EAqBLY,WApBO,EAqBPF,YAnBQ,WACZX,EAJS,GAKTgB,EAAShB,EAAQ,IAkBbY,WAdO,WACfI,EATe,IAuBPhB,MAAOA,QClBRiB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.139bbfda.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"Display_display__1TCLT\",\"textRed\":\"Display_textRed__1K2Si\",\"text\":\"Display_text__3mfbU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Buttons_btn__3k33L\"};","import React from \"react\";\r\nimport s from './Display.module.css'\r\n\r\ntype DisplayPropsType = {\r\n    count: number\r\n    maxValue: number\r\n}\r\n\r\nexport const Display = (props: DisplayPropsType) => {\r\n    return (\r\n        <div className={s.display}>\r\n            <span className={props.count === props.maxValue ? s.textRed : s.text}>{props.count}</span>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport './../../App.css'\r\n\r\ntype ButtonPropsType = {\r\n    title: string\r\n    onclick: () => void\r\n    disabled: boolean\r\n}\r\n\r\n\r\nexport const Button = (props: ButtonPropsType) => {\r\n    return (\r\n        <button className={'button'} onClick={props.onclick} disabled={props.disabled}>{props.title}</button>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport {Button} from \"./Button\";\r\nimport s from './Buttons.module.css'\r\n\r\ntype ButtonsPropsType = {\r\n    maxValue: number\r\n    startValue: number\r\n    changeCount: () => void\r\n    resetCount: () => void\r\n    count: number\r\n}\r\n\r\nconst Buttons = (props: ButtonsPropsType) => {\r\n    return (\r\n        <div className={s.btn}>\r\n            <Button title=\"inc\" onclick={props.changeCount} disabled={props.count === props.maxValue}/>\r\n            <Button title=\"reset\" onclick={props.resetCount} disabled={props.count === props.startValue}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Buttons;","import React, {useState} from 'react';\nimport './App.css';\nimport {Display} from \"./components/Display/Display\";\nimport Buttons from \"./components/Buttons/Buttons\";\n\nfunction App() {\n\n    let [count, setCount] = useState(0)\n    const maxValue = 5;\n    const startValue = 0;\n\n    const changeCount = () => {\n        if (count < maxValue) {\n            setCount(count + 1)\n        }\n    }\n\n    const resetCount = () => {\n        setCount(startValue)\n    }\n\n    return (\n        <div className=\"App\">\n            <Display\n                count={count}\n                maxValue={maxValue}\n            />\n            <Buttons\n                maxValue={maxValue}\n                startValue={startValue}\n                changeCount={changeCount}\n                resetCount={resetCount}\n                count={count}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}